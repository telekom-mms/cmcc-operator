name: build-push
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt
          cache: gradle
      - id: repository
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}/cmcc-operator
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: push
        run: |
          ./gradlew build test jib -Djib.to.image=ghcr.io/${{ steps.repository.outputs.lowercase }}:${{github.ref_name}} -Djib.to.tags=${{github.ref_name}},latest -Djib.to.auth.username=${{ github.actor }} -Djib.to.auth.password=${{ github.token }}
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: update Chart.yaml
        working-directory: charts
        run: |
          cat <<EOF >cmcc/Chart.yaml
          apiVersion: v2
          name: cmcc
          description: CoreMedia Content Cloud through cmcc-operator
          type: application
          version: ${{github.ref_name}}
          appVersion: ${{github.ref_name}}
          EOF
          cat <<EOF >cmcc-operator/Chart.yaml
          apiVersion: v2
          name: cmcc-operator
          description: Kubernetes Operator to bring up a CoreMedia Content Cloud installation
          type: application
          version: ${{github.ref_name}}
          appVersion: ${{github.ref_name}}
          EOF

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.8.1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"