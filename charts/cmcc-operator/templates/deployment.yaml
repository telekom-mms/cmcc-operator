apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cmcc-operator.fullname" . }}
  labels:
    {{- include "cmcc-operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cmcc-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cmcc-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cmcc-operator.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- /*
          the following rules apply for the image tag (taken from here https://github.com/helm/helm/issues/3141#issuecomment-2417672797):
            When values are explicitly specified, those values will always be used.
            When rendering the chart from the source repository, the version will default to latest.
            When rendering the chart from a helm package tarball when you did not specify --version, the version will default to latest.
            When rendering a packaged chart that you did specify a version for, the version will default to the same as the version of the chart.
          */}}
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag | default (eq .Chart.AppVersion "0.1.0-alpha1" | ternary "latest" .Chart.AppVersion ) }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CMCC_USECONFIGMAP
              value: {{  .Values.cmcc.useConfigMap | quote }}
            - name: CMCC_USECRD
              value: {{  .Values.cmcc.useCrd | quote }}
              {{- if .Values.cmcc.jsonLogging }}
            - name: LOGGING_CONFIG
              value: "classpath:logback-config-json.xml"
              {{- end }}
              {{- if .Values.cmcc.scope.namespace.include }}
            - name: CMCC_SCOPE_NAMESPACE_INCLUDE
              value: "{{ join "," .Values.cmcc.scope.namespace.include }}"
              {{- end }}
              {{- if .Values.cmcc.scope.namespace.exclude }}
            - name: CMCC_SCOPE_NAMESPACE_EXCLUDE
              value: "{{ join "," .Values.cmcc.scope.namespace.exclude }}"
              {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - emptyDir: {}
          name: tmp
